novo-address {
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  &.ng-touched.ng-invalid:not(.ng-pristine):not(.novo-control-container) {
    .street-address,
    .apt,
    .city,
    .state,
    .zip,
    .country-name {
      &.invalid {
        input,
        novo-select div[type=button] {
          border-bottom: rem(1px) solid $negative !important;
        }
      }
    }
  }
  input {
    min-width: rem(10px);
  }
  .street-address,
  .apt,
  .city,
  .state,
  .zip,
  .country-name {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: flex-end;
  }
  .street-address {
    flex: 3 3 75%;
    padding: 0 0 rem(5px) !important;
  }
  .apt {
    flex: 1 1 25%;
    padding: 0 0 rem(5px) !important;
    align-self: flex-end;
  }
  .city {
    flex: 2 2 28%;
    padding: rem(5px) 0 !important;
  }
  .state {
    flex: 1 1 30%;
    align-items: center;
    &>div {
      padding: rem(19px) rem(29px) rem(17px) 0 !important;
    }
  }
  .zip {
    flex: 1 0 20%;
    padding: rem(5px) 0 !important;
  }
  .country-name {
    flex: 4 4 100%;
    padding: rem(10px) 0 0 !important;
  }
}

novo-form .novo-form-container form,
novo-dynamic-form[layout='vertical'] .novo-form-container form,
novo-dynamic-form .novo-form-container form {
  div.novo-form-row novo-control>div.novo-control-container>div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address,
  div.novo-control-group-control novo-control>div.novo-control-container>div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address,
  td.novo-form-row novo-control>div.novo-control-container>div.novo-control-outer-container .novo-control-inner-container .novo-control-inner-input-container novo-address {
    .street-address,
    .apt,
    .city,
    .state,
    .zip,
    .country-name {
      &:hover:not(.invalid) i.required-indicator.bhi-circle,
      &:hover:not(.invalid) i.required-indicator.bhi-check {
        border-bottom: rem(1px) solid lighten($dark, 15%);
      }
      &.focus:not(.invalid) i.required-indicator.bhi-circle,
      &.focus:not(.invalid) i.required-indicator.bhi-check {
        border-bottom: rem(1px) solid $positive;
      }
    }
    i.required-indicator.bhi-circle,
    i.required-indicator.bhi-check {
      display: flex;
      border-bottom: rem(1px) solid #afb9c0;
      padding-bottom: rem(18px);
      margin-right: 0;
      padding-top: rem(10px);
      padding-right: rem(20px);
      margin-top: 0;
      align-self: flex-end;
    }
    i.required-indicator {
      padding-bottom: rem(18px);
      padding-top: rem(8px);
    }
    i.required-indicator.bhi-check {
      padding-bottom: rem(20px);
      padding-top: rem(6px);
    }
    .invalid i.required-indicator,
    .invalid i.required-indicator {
      border-bottom: rem(1px) solid $negative;
    }
  }
}
